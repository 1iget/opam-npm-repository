lib: [
"package.json" {"package.json"}
"README.md" {"README.md"}
"LICENSE" {"LICENSE"}
"traverse.js" {"traverse.js"}
"stats.js" {"stats.js"}
"defs-main.js" {"defs-main.js"}
"defs-wrapper.js" {"defs-wrapper.js"}
"error.js" {"error.js"}
"scope.js" {"scope.js"}
"run-tests.js" {"run-tests.js"}
"options.js" {"options.js"}
"other/v8-bug.js" {"other/v8-bug.js"}
"other/v8-for-in-scope-2.js" {"other/v8-for-in-scope-2.js"}
"other/v8-for-in-scope.js" {"other/v8-for-in-scope.js"}
"jshint_globals/README" {"jshint_globals/README"}
"jshint_globals/vars.js" {"jshint_globals/vars.js"}
"jshint_globals/LICENSE.jshint" {"jshint_globals/LICENSE.jshint"}
"tests/a-out.js" {"tests/a-out.js"}
"tests/const-assign.js" {"tests/const-assign.js"}
"tests/var-let-same-scope.js" {"tests/var-let-same-scope.js"}
"tests/duplicate-var.js" {"tests/duplicate-var.js"}
"tests/early-out.js" {"tests/early-out.js"}
"tests/xdollarzero-out.js" {"tests/xdollarzero-out.js"}
"tests/var-inside-let.js" {"tests/var-inside-let.js"}
"tests/forbidden-loop-closure.js" {"tests/forbidden-loop-closure.js"}
"tests/global-name-exists-out.js" {"tests/global-name-exists-out.js"}
"tests/a.js" {"tests/a.js"}
"tests/used-in-same-declaration.js" {"tests/used-in-same-declaration.js"}
"tests/catch2.js" {"tests/catch2.js"}
"tests/let-already-declared.js" {"tests/let-already-declared.js"}
"tests/catch2-out.js" {"tests/catch2-out.js"}
"tests/letletlet-out.js" {"tests/letletlet-out.js"}
"tests/catch.js" {"tests/catch.js"}
"tests/letletlet.js" {"tests/letletlet.js"}
"tests/catch-out.js" {"tests/catch-out.js"}
"tests/rename-out.js" {"tests/rename-out.js"}
"tests/allowed-loop-closures.js" {"tests/allowed-loop-closures.js"}
"tests/rename.js" {"tests/rename.js"}
"tests/allowed-loop-closures-out.js" {"tests/allowed-loop-closures-out.js"}
"tests/use-before-definition.js" {"tests/use-before-definition.js"}
"tests/early.js" {"tests/early.js"}
"tests/xdollarzero.js" {"tests/xdollarzero.js"}
"tests/global-name-exists.js" {"tests/global-name-exists.js"}
"tests/use-before-definition-stderr" {"tests/use-before-definition-stderr"}
"tests/used-in-same-declaration-stderr" {"tests/used-in-same-declaration-stderr"}
"tests/let-already-declared-stderr" {"tests/let-already-declared-stderr"}
"tests/var-inside-let-stderr" {"tests/var-inside-let-stderr"}
"tests/forbidden-loop-closure-stderr" {"tests/forbidden-loop-closure-stderr"}
"tests/var-let-same-scope-stderr" {"tests/var-let-same-scope-stderr"}
"tests/duplicate-var-stderr" {"tests/duplicate-var-stderr"}
"tests/const-assign-stderr" {"tests/const-assign-stderr"}
"CHANGES.md" {"CHANGES.md"}
]
libexec: [
"defs" {"defs"}
]
